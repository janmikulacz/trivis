3c3
< * Date      :  26 October 2022                                                 *
---
> * Date      :  9 February 2023                                                 *
5c5
< * Copyright :  Angus Johnson 2010-2022                                         *
---
> * Copyright :  Angus Johnson 2010-2023                                         *
14a15
> #include <queue>
18c19
< namespace Clipper2Lib 
---
> namespace Clipper2Lib
22a24,39
>   class OutPt2;
>   typedef std::vector<OutPt2*> OutPt2List;
> 
>   class OutPt2 {
>   public:
>     Point64 pt;
>     size_t owner_idx;
>     OutPt2List* edge;
>     OutPt2* next;
>     OutPt2* prev;
>   };
> 
>   //------------------------------------------------------------------------------
>   // RectClip
>   //------------------------------------------------------------------------------
> 
23a41,43
>   private:
>     void ExecuteInternal(const Path64& path);
>     Path64 GetPath(OutPt2*& op);
26,28c46,51
<     const Point64 mp_;
<     const Path64 rectPath_;
<     Path64 result_;
---
>     const Path64 rect_as_path_;
>     const Point64 rect_mp_;
>     Rect64 path_bounds_;
>     std::deque<OutPt2> op_container_;
>     OutPt2List results_;  // each path can be broken into multiples
>     OutPt2List edges_[8]; // clockwise and counter-clockwise
30c53,54
< 
---
>     void CheckEdges();
>     void TidyEdges(int idx, OutPt2List& cw, OutPt2List& ccw);
32a57
>     OutPt2* Add(Point64 pt, bool start_new = false);
38,40c63,65
<       mp_(rect.MidPoint()),
<       rectPath_(rect.AsPath()) {}
<     Path64 Execute(const Path64& path);
---
>       rect_as_path_(rect.AsPath()),
>       rect_mp_(rect.MidPoint()) {}
>     Paths64 Execute(const Paths64& paths, bool convex_only = false);
42a68,71
>   //------------------------------------------------------------------------------
>   // RectClipLines
>   //------------------------------------------------------------------------------
> 
43a73,75
>   private:
>     void ExecuteInternal(const Path64& path);
>     Path64 GetPath(OutPt2*& op);
46c78
<     Paths64 Execute(const Path64& path);
---
>     Paths64 Execute(const Paths64& paths);
